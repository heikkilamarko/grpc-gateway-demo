input:
  http_server:
    path: /v1/calculator
    timeout: 10s
    sync_response:
      status: ${!meta("http_status")}
      headers:
        Content-Type: application/json

pipeline:
  processors:
    - try:
        - mapping: meta http_status = 400

        - json_schema:
            schema_path: file:///json_schema.json

        - mapping: meta http_status = 500

        - branch:
            request_map: |
              root.a = this.a
              root.b = this.b
            processors:
              - http:
                  url: ${CALCULATOR_SERVICE_ADDRESS}/v1/calculator/add
                  verb: POST
            result_map: |
              root.results.add = this.result

        - branch:
            request_map: |
              root.a = this.a
              root.b = this.b
            processors:
              - http:
                  url: ${CALCULATOR_SERVICE_ADDRESS}/v1/calculator/subtract
                  verb: POST
            result_map: |
              root.results.subtract = this.result

output:
  processors:
    - mapping: |
        if errored() {
          root.error = if @http_status == 400 { error() } else { "internal error" }
        } else {
          root = this
          meta http_status = 200
        }
        root.processed_by = "[%s] calculator-pipeline-http-request".format(hostname())
        root.processed_at = now()

  sync_response: {}

http:
  address: ${HTTP_ADDRESS}

logger:
  level: ${LOG_LEVEL:INFO}
  format: logfmt
  static_fields:
    service: calculator-pipeline-http-request

shutdown_delay: 5s
