input:
  nats:
    urls: [nats://nats:4222]
    subject: calculator.v1.*
    auto_replay_nacks: false
    send_ack: false

pipeline:
  processors:
    - try:
        - mapping: |
            meta calculator_operation = @nats_subject.split(".").index(-1)

            root = if !["add","subtract"].contains(@calculator_operation) {
              throw("invalid operation, supported operations: 'add', 'subtract'")
            }

        - json_schema:
            schema_path: file:///json_schema.json

        - branch:
            request_map: |
              root.a = this.a
              root.b = this.b
            processors:
              - http:
                  url: ${CALCULATOR_SERVICE_ADDRESS}/v1/calculator/${!@calculator_operation}
                  verb: POST
            result_map: |
              root.result = this.result

output:
  processors:
    - mapping: |
        if errored() {
          root.error = error()
        } else {
          root = this
        }
        root.processed_by = "[%s] calculator-pipeline-nats-request".format(hostname())
        root.processed_at = now()

  nats:
    urls: [nats://nats:4222]
    subject: ${!@nats_reply_subject}

http:
  address: ${HTTP_ADDRESS}

logger:
  level: ${LOG_LEVEL:INFO}
  format: logfmt
  static_fields:
    service: calculator-pipeline-nats-request

shutdown_delay: 5s
